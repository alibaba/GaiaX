apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven-publish'

allprojects {
    repositories {
        mavenLocal()
        google()
        maven { url "https://jitpack.io" }
        mavenCentral()
        maven { url 'https://mvnrepository.com/artifact/com.github.gundy/semver4j'}
    }
}

buildscript {

    ext.kotlin_version = '1.5.31'

    repositories {
        mavenLocal()
        google()
        maven { url "https://jitpack.io" }
        mavenCentral()
        maven { url 'https://mvnrepository.com/artifact/com.github.gundy/semver4j'}
    }

    dependencies {
        classpath "com.android.tools.build:gradle:4.2.2"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }

}

def platformVersion = 16

android {

    compileSdk 28

    defaultConfig {
        minSdk 16
        targetSdk 28

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        consumerProguardFiles 'consumer-rules.pro'

        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11"
                arguments "-DANDROID_PLATFORM_LEVEL=${platformVersion}",
                        '-DANDROID_TOOLCHAIN=clang',
                        '-DANDROID_STL=c++_shared'
            }
        }

        ndk {
            // support all abi armeabi-v7a arm64-v8a x86 x86_64
            // abiFilters 'armeabi-v7a', 'arm64-v8a'
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = [
                    '/src/main/jniLibs',
            ]
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.10.2"
        }
    }
    //过滤掉libc++_shared.so，不添加到APK中。
    //当APK中已有libc++_shared.so，可以打开这段注释，减少包大小。
//    packagingOptions {
//        exclude 'lib/*/libc++_shared.so'
//    }

    // https://www.jianshu.com/p/681589927f1f
    compileOptions {
        kotlinOptions.freeCompilerArgs += ['-module-name', "GaiaX-Analyze"]
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildTypes {
        debug {
            ndk {
                abiFilters "x86", 'armeabi-v7a', 'arm64-v8a'
            }
        }
        release {
            ndk {
                abiFilters "x86", 'armeabi-v7a', 'arm64-v8a'
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.5.31@jar"
    implementation 'com.alibaba:fastjson:1.2.26@jar'
    implementation 'androidx.annotation:annotation:1.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit-ktx:1.1.3'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'androidx.test:runner:1.4.0'

}

afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                from components.release

                if (project.hasProperty("version")) {
                    version = project.getProperty("version")
                } else {
                    version = '0.0.0'
                }
                if (project.hasProperty("group")) {
                    groupId = project.getProperty("group")
                } else {
                    groupId = 'com.github.alibaba.GaiaX'
                }

                artifactId = 'GaiaX-Analyze'
            }
        }
    }
}
